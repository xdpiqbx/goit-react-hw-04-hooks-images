{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.scss","components/Modal/Modal.module.scss","components/Button/Button.module.scss","components/ImageGallery/ImageGallery.module.scss","components/Container/Container.module.scss","components/Searchbar/Searchbar.module.scss","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","images/cat.jpg","components/ImageGallery/ImageGallery.js","api/fetch.js","components/Container/Container.js","components/Modal/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Searchbar","props","useState","value","setValue","className","s","SearchForm","onSubmit","event","preventDefault","onSubmitHandler","SearchFormInput","type","onChange","target","autoComplete","autoFocus","placeholder","SearchFormButton","SearchFormButtonLabel","ImageGalleryItem","smallImg","bigImg","tags","src","alt","data-big","ImageGalleryItemImage","onClick","Button","onPageChange","ImageGallery","images","setImages","currentQuery","setCurrentQuery","status","setStatus","page","setPage","useEffect","query","queryString","fetch","join","then","res","ok","json","Promise","reject","Error","mainFetch","data","prev","hits","catch","error","imageClickHandler","dataset","getContentForModal","big","length","image","width","map","id","webformatURL","largeImageURL","color","height","window","scrollTo","top","document","documentElement","scrollHeight","behavior","Container","wrapper","children","modal","querySelector","Modal","imageStatus","setImageStatus","addEventListener","toggleModal","removeEventListener","code","onClose","createPortal","Overlay","currentTarget","onLoad","App","setQuery","showModal","setShowModal","bigImage","setBigImage","setAlt","newQuery","newBigImage","newAlt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"wIACAA,EAAOC,QAAU,CAAC,iBAAmB,2CAA2C,sBAAwB,kD,mBCAxGD,EAAOC,QAAU,CAAC,QAAU,uBAAuB,MAAQ,uB,mBCA3DD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,aAAe,qC,mBCAjCD,EAAOC,QAAU,CAAC,QAAU,6B,uCCA5BD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,iBAAmB,oCAAoC,sBAAwB,yCAAyC,gBAAkB,qC,iHCoCjOC,EAjCG,SAAAC,GAAU,IAAD,EACCC,mBAAS,IADV,mBAClBC,EADkB,KACXC,EADW,KAazB,OACE,wBAAQC,UAAWC,IAAEN,UAArB,SACE,uBAAMK,UAAWC,IAAEC,WAAYC,SARX,SAAAC,GACtBA,EAAMC,iBACNT,EAAMU,gBAAgBR,GACtBC,EAAS,KAKP,UACE,uBACEC,UAAWC,IAAEM,gBACbC,KAAK,OACLC,SAhBS,SAAAL,GACfL,EAASK,EAAMM,OAAOZ,QAgBhBA,MAAOA,EACPa,aAAa,MACbC,WAAS,EACTC,YAAY,6BAEd,wBAAQL,KAAK,SAASR,UAAWC,IAAEa,iBAAnC,SACE,sBAAMd,UAAWC,IAAEc,sBAAnB,4B,yBC7BK,SAASC,EAAiBpB,GAAQ,IACvCqB,EAA2BrB,EAA3BqB,SAAUC,EAAiBtB,EAAjBsB,OAAQC,EAASvB,EAATuB,KAC1B,OACE,oBAAInB,UAAWC,IAAEe,iBAAjB,SACE,qBACEI,IAAKH,EACLI,IAAKF,EACLG,WAAUJ,EACVlB,UAAWC,IAAEsB,sBACbC,QAAS5B,EAAM4B,Y,qBCRR,SAASC,EAAO7B,GAC7B,OACE,wBAAQY,KAAK,SAASR,UAAWC,IAAEwB,OAAQD,QAAS5B,EAAM8B,aAA1D,uB,oBCJW,MAA0B,gC,iBCQzC,IAqFeC,EArFM,SAAA/B,GAAU,IAAD,EAEAC,mBAAS,IAFT,mBAErB+B,EAFqB,KAEbC,EAFa,OAGYhC,mBAAS,IAHrB,mBAGrBiC,EAHqB,KAGPC,EAHO,OAIAlC,mBAAS,QAJT,mBAIrBmC,EAJqB,KAIbC,EAJa,OAKJpC,mBAAS,GALL,mBAKrBqC,EALqB,KAKfC,EALe,KAO5BC,qBAAU,WACHxC,EAAMyC,QAIXJ,EAAU,WCjBC,SAAmBI,EAAOH,GACvC,IAAMI,EAAc,CAAC,KAAD,OACbD,GADa,eAEVH,GAFU,cAJN,sCAIM,2DASpB,OAAOK,MAAM,GAAD,OAZG,2BAYH,YAAgBD,EAAYE,KAAK,OAAQC,MAAK,SAAAC,GACxD,OAAIA,EAAIC,GACCD,EAAIE,OAENC,QAAQC,OAAO,IAAIC,MAAJ,6GAAgCV,QDKtDW,CAAUpD,EAAMyC,MAAOH,GACpBO,MAAK,SAAAQ,GACCnB,IAAiBlC,EAAMyC,MACxBR,GAAU,SAAAqB,GAAI,4BAAQA,GAAR,YAAiBD,EAAKE,UAEpCtB,EAAUoB,EAAKE,MAEjBlB,EAAU,YACVF,EAAgBnC,EAAMyC,UAEzBe,OAAM,SAAAC,GAAK,OAAIpB,EAAU,kBAC3B,CAACC,EAAMtC,EAAMyC,QAEhB,IAIMiB,EAAoB,SAAAlD,GAAU,IAAD,EACRA,EAAMM,OAAvB6C,EADyB,EACzBA,QAASlC,EADgB,EAChBA,IACjBzB,EAAM4D,mBAAmBD,EAAQE,IAAKpC,IAGxC,OAAsB,IAAlBO,EAAO8B,QAA2B,aAAX1B,EAEvB,qCACE,2NACA,mLACA,qBAAKZ,IAAKuC,EAAOtC,IAAI,MAAMuC,MAAM,WAIxB,aAAX5B,GAAoC,YAAXA,EAEzB,qCACE,oBAAIhC,UAAWC,IAAE0B,aAAjB,SACGC,EAAOiC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,cAAe7C,EAApC,EAAoCA,KAApC,OACV,cAACH,EAAD,CAEEC,SAAU8C,EACV7C,OAAQ8C,EACR7C,KAAMA,EACNK,QAAS8B,GAJJQ,QAQC,YAAX9B,EACC,cAAC,IAAD,CACExB,KAAK,eACLyD,MAAM,UACNC,OAAQ,IACRN,MAAO,MAGT,cAACnC,EAAD,CAAQC,aAxCK,WACnBS,GAAQ,SAAAe,GAAI,OAAIA,EAAO,QA0CjBiB,OAAOC,SAAS,CACdC,IAAKC,SAASC,gBAAgBC,aAC9BC,SAAU,cAML,SAAXzC,EACK,yJAEM,aAAXA,EACK,+CADT,G,iBExFa,SAAS0C,EAAU9E,GAChC,OAAO,qBAAKI,UAAWC,IAAE0E,QAAlB,SAA4B/E,EAAMgF,W,qBCGrCC,EAAQP,SAASQ,cAAc,UA+CtBC,EA7CA,SAAAnF,GAAU,IAAD,EACgBC,mBAAS,WADzB,mBACfmF,EADe,KACFC,EADE,KAGtB7C,qBAAW,WAET,OADA+B,OAAOe,iBAAiB,UAAWC,GAC5B,WACLhB,OAAOiB,oBAAoB,UAAWD,OAI1C,IAAMA,EAAc,SAAA/E,GACC,WAAfA,EAAMiF,MACRzF,EAAM0F,WAcFlE,EAAaxB,EAAbwB,IAAKC,EAAQzB,EAARyB,IACb,OAAOkE,uBACL,qBAAKvF,UAAWC,IAAEuF,QAAShE,QAZD,SAAApB,GACtBA,EAAMM,SAAWN,EAAMqF,eACzB7F,EAAM0F,WAUR,SACE,sBAAKtF,UAAWC,IAAE8E,MAAlB,UACE,qBAAK3D,IAAKA,EAAKC,IAAKA,EAAKqE,OARL,WACxBT,EAAe,aAQM,YAAhBD,EACC,cAAC,IAAD,CACExE,KAAK,eACLyD,MAAM,UACNC,OAAQ,IACRN,MAAO,MAEP,UAGRiB,ICPWc,EAnCH,WAAO,IAAD,EACU9F,mBAAS,IADnB,mBACTwC,EADS,KACFuD,EADE,OAEkB/F,oBAAS,GAF3B,mBAETgG,EAFS,KAEEC,EAFF,OAGgBjG,mBAAS,MAHzB,mBAGTkG,EAHS,KAGCC,EAHD,OAIMnG,mBAAS,MAJf,mBAITwB,EAJS,KAIJ4E,EAJI,KAoBhB,OACE,eAACvB,EAAD,WACE,cAAC,EAAD,CAAWpE,gBAhBS,SAAA4F,GACtBN,EAASM,MAgBP,cAAC,EAAD,CACE7D,MAAOA,EACPmB,mBAfqB,SAAC2C,EAAaC,GACvCJ,EAAYG,GACZF,EAAOG,GACPN,GAAa,MAcVD,GACC,cAAC,EAAD,CAAOzE,IAAK2E,EAAU1E,IAAKA,EAAKiE,QAZlB,WAClBQ,GAAa,SAAA5C,GAAI,OAAKA,YCXXmD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9D,MAAK,YAAkD,IAA/C+D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzC,SAAS0C,eAAe,SAG1BX,M","file":"static/js/main.c7b0c9ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__3JJHC\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__23u-C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__1A9Lw\",\"Modal\":\"Modal_Modal__2LUw9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2q4qS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__21_cI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Container_wrapper__2Kpao\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1ORio\",\"SearchForm\":\"Searchbar_SearchForm__2-ut5\",\"SearchFormButton\":\"Searchbar_SearchFormButton__3nj9b\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__2bRw7\",\"SearchFormInput\":\"Searchbar_SearchFormInput__i7Vn2\"};","import { useState } from 'react';\r\n\r\nimport s from './Searchbar.module.scss';\r\n\r\nconst Searchbar = props => {\r\n  const [value, setValue] = useState('')\r\n\r\n  const getValue = event => {\r\n    setValue(event.target.value)\r\n  };\r\n\r\n  const onSubmitHandler = event => {\r\n    event.preventDefault();\r\n    props.onSubmitHandler(value);\r\n    setValue('')\r\n  };\r\n  \r\n  return (\r\n    <header className={s.Searchbar}>\r\n      <form className={s.SearchForm} onSubmit={onSubmitHandler}>\r\n        <input\r\n          className={s.SearchFormInput}\r\n          type=\"text\"\r\n          onChange={getValue}\r\n          value={value}\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n        />\r\n        <button type=\"submit\" className={s.SearchFormButton}>\r\n          <span className={s.SearchFormButtonLabel}>Search</span>\r\n        </button>\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Searchbar;","import s from './ImageGalleryItem.module.scss';\r\nexport default function ImageGalleryItem(props) {\r\n  const { smallImg, bigImg, tags } = props;\r\n  return (\r\n    <li className={s.ImageGalleryItem}>\r\n      <img\r\n        src={smallImg}\r\n        alt={tags}\r\n        data-big={bigImg}\r\n        className={s.ImageGalleryItemImage}\r\n        onClick={props.onClick}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n","import s from './Button.module.scss';\r\n\r\nexport default function Button(props) {\r\n  return (\r\n    <button type=\"button\" className={s.Button} onClick={props.onPageChange}>\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/cat.c79bab9c.jpg\";","import { useEffect, useState } from 'react';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport Button from '../Button';\r\nimport Loader from 'react-loader-spinner';\r\nimport image from '../../images/cat.jpg';\r\nimport s from './ImageGallery.module.scss';\r\nimport mainFetch from '../../api/fetch';\r\n\r\nconst ImageGallery = props => {\r\n\r\n  const [images, setImages] = useState([])\r\n  const [currentQuery, setCurrentQuery] = useState('')\r\n  const [status, setStatus] = useState('idle')\r\n  const [page, setPage] = useState(1)\r\n\r\n  useEffect(() => {\r\n    if (!props.query){\r\n      return\r\n    }\r\n\r\n    setStatus('pending')\r\n\r\n    mainFetch(props.query, page)\r\n      .then(data => {\r\n          if(currentQuery === props.query){\r\n            setImages(prev => [...prev, ...data.hits])\r\n          }else{\r\n            setImages(data.hits)\r\n          }\r\n          setStatus('resolved')\r\n          setCurrentQuery(props.query)\r\n        })\r\n      .catch(error => setStatus('rejected'));\r\n  }, [page, props.query])\r\n\r\n  const onPageChange = () => {\r\n    setPage(prev => prev + 1);\r\n  };\r\n\r\n  const imageClickHandler = event => {\r\n    const { dataset, alt } = event.target;\r\n    props.getContentForModal(dataset.big, alt);\r\n  };\r\n\r\n  if (images.length === 0 && status === 'resolved') {\r\n    return (\r\n      <>\r\n        <h1>По Вашему запросу ничего не найдено</h1>\r\n        <p>Не огочайтесь. Вот Вам котик =)</p>\r\n        <img src={image} alt=\"cat\" width=\"500\" />\r\n      </>\r\n    );\r\n  }\r\n  if (status === 'resolved' || status === 'pending') {\r\n    return (\r\n      <>\r\n        <ul className={s.ImageGallery}>\r\n          {images.map(({ id, webformatURL, largeImageURL, tags }) => (\r\n            <ImageGalleryItem\r\n              key={id}\r\n              smallImg={webformatURL}\r\n              bigImg={largeImageURL}\r\n              tags={tags}\r\n              onClick={imageClickHandler}\r\n            />\r\n          ))}\r\n        </ul>\r\n        {status === 'pending' ? (\r\n          <Loader\r\n            type=\"RevolvingDot\"\r\n            color=\"#00BFFF\"\r\n            height={100}\r\n            width={100}\r\n          />\r\n        ) : (\r\n          <Button onPageChange={onPageChange} />\r\n        )}\r\n        {\r\n          window.scrollTo({\r\n            top: document.documentElement.scrollHeight,\r\n            behavior: 'smooth',\r\n          })\r\n        }\r\n      </>\r\n    );\r\n  }\r\n  if (status === 'idle') {\r\n    return <h1>Давай искать картинки =)</h1>;\r\n  }\r\n  if (status === 'rejected') {\r\n    return <h1>Oh no =(</h1>;\r\n  }\r\n}\r\nexport default ImageGallery;","const API_KEY = '18591857-af67bc0007236afb4a9ddb74e';\r\nconst BASE_URL = 'https://pixabay.com/api/';\r\n\r\nexport default function mainFetch(query, page) {\r\n  const queryString = [\r\n    `q=${query}`,\r\n    `page=${page}`,\r\n    `key=${API_KEY}`,\r\n    `image_type=photo`,\r\n    `orientation=horizontal`,\r\n    `per_page=12`,\r\n  ];\r\n\r\n  return fetch(`${BASE_URL}?${queryString.join('&')}`).then(res => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(new Error(`Нет таких картинок ${query}`));\r\n  });\r\n}\r\n","import s from './Container.module.scss';\r\nexport default function Container(props) {\r\n  return <div className={s.wrapper}>{props.children}</div>;\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport Loader from 'react-loader-spinner';\r\nimport s from './Modal.module.scss';\r\n\r\nconst modal = document.querySelector('#modal');\r\n\r\nconst  Modal = props => {\r\n  const [imageStatus, setImageStatus] = useState('loading')\r\n\r\n  useEffect( () => {\r\n    window.addEventListener('keydown', toggleModal);\r\n    return ()=>{\r\n      window.removeEventListener('keydown', toggleModal);\r\n    }\r\n  })\r\n\r\n  const toggleModal = event => {\r\n    if (event.code === 'Escape') {\r\n      props.onClose();\r\n    }\r\n  };\r\n\r\n  const handleBackdropClick = event => {\r\n    if (event.target === event.currentTarget) {\r\n      props.onClose();\r\n    }\r\n  };\r\n\r\n  const handleImageLoaded = () => {\r\n    setImageStatus('loaded')\r\n  }\r\n\r\n  const { src, alt } = props;\r\n  return createPortal(\r\n    <div className={s.Overlay} onClick={handleBackdropClick}>\r\n      <div className={s.Modal}>\r\n        <img src={src} alt={alt} onLoad={handleImageLoaded} />\r\n        {imageStatus === 'loading' ? (\r\n          <Loader\r\n            type=\"RevolvingDot\"\r\n            color=\"#00BFFF\"\r\n            height={100}\r\n            width={100}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    </div>,\r\n    modal,\r\n  );\r\n}\r\n\r\nexport default Modal","import Searchbar from './components/Searchbar/Searchbar';\r\nimport ImageGallery from './components/ImageGallery/ImageGallery';\r\nimport Container from './components/Container/Container';\r\nimport Modal from './components/Modal';\r\nimport { useState } from 'react';\r\n\r\nconst App = () => {\r\n  const [query, setQuery] = useState('')\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [bigImage, setBigImage] = useState(null)\r\n  const [alt, setAlt] = useState(null)\r\n\r\n  const onSubmitHandler = newQuery => {\r\n    setQuery(newQuery)\r\n  };\r\n\r\n  const getContentForModal = (newBigImage, newAlt) => {\r\n    setBigImage(newBigImage)\r\n    setAlt(newAlt)\r\n    setShowModal(true)\r\n  };\r\n\r\n  const toggleModal = () => {\r\n    setShowModal(prev => !prev)\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Searchbar onSubmitHandler={onSubmitHandler} />\r\n      <ImageGallery\r\n        query={query}\r\n        getContentForModal={getContentForModal}\r\n      />\r\n      {showModal && (\r\n        <Modal src={bigImage} alt={alt} onClose={toggleModal} />\r\n      )}\r\n    </Container>\r\n  );\r\n\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}